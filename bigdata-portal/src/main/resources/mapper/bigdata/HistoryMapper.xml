<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bigdata.portal.mapper.HistoryMapper">

	<!-- 사용자 파일 업로드 로그 이력 저장 -->
	<insert id="insertBdpUserUploadLog" parameterType="hashmap" useGeneratedKeys="true" keyProperty="ulId">
		<![CDATA[
		INSERT INTO BDP_USER_UPLOAD_LOG SET
			USER_ID = #{userId},
			FILE_PATH = #{filePath},
			FILE_REAL_NAME = #{fileRealName},
			FILE_NAME = #{fileName},
			FILE_SIZE = #{fileSize},
			FILE_LOCATION = #{fileLocation},
			URI = #{uri},
			TARGET = #{target},
			UPLOAD_DTTM = NOW(),
			UPLOAD_IP = #{uploadIp}
		]]>		
	</insert>
	
	<!-- 사용자 파일 업로드 로그에 hdfs파일경로 이력 수정 -->
	<update id="updateBdpUserUploadLogHdfsFilePath" parameterType="hashmap">
		UPDATE BDP_USER_UPLOAD_LOG SET
			HDFS_FILE_PATH = #{hdfsFilePath},
			FILE_LOCATION = #{fileLocation}
		WHERE UL_ID=#{ulId}
	</update>
	
	
	<!-- 회원이 등록한 글(분석/결합/시각화)의 이력을 저장 -->
	<insert id="insertBdpUserArticelLog" parameterType="hashmap">
		<![CDATA[
		INSERT INTO BDP_USER_ARTICLE_LOG SET
			USER_ID = #{userId},
			ART_TARGET = #{artTarget},
			ART_CONT = #{artCont},
			ART_URI = #{artUri},
			ART_URL = #{artUrl},
			ART_IDX = #{artIdx},
			ART_STATUS = #{artStatus},
			ART_DTTM = NOW(),
			ART_IP = #{artIp}
		]]>
	</insert>
	
	<!-- 파일 업로드 이력 리스트를 카운트한다 -->
	<select id="getTotalCountBdpUserUploadLog" parameterType="hashmap" resultType="int">
		<![CDATA[
		SELECT COUNT(*) FROM BDP_USER_UPLOAD_LOG WHERE 1=1
		]]>
		<if test="userId != null and !userId.equals('')">
		AND USER_ID = #{userId}
		</if>
	</select>
	<!-- 파일 업로드 이력 리스트를 리턴한다 -->
	<select id="selectBdpUserUploadLogList" parameterType="hashmap" resultType="EntityMap">
		<![CDATA[		
		SELECT * FROM BDP_USER_UPLOAD_LOG WHERE 1=1
		]]>
		<if test="userId != null and !userId.equals('')">
		AND USER_ID = #{userId}
		</if>
		ORDER BY UL_ID DESC 
		LIMIT #{startNum}, #{endNum}
	</select>
	
	<!-- 회원이 등록한 글(분석/결합/시각화)의 이력 리스트를 카운트 한다 -->
	<select id="getTotalCountBdpUserArticleLog" parameterType="hashmap" resultType="int">
		<![CDATA[
		SELECT COUNT(*) FROM BDP_USER_ARTICLE_LOG WHERE 1=1
		]]>
		<if test="userId != null and !userId.equals('')">
		AND USER_ID = #{userId}
		</if>
	</select>
	<!-- 회원이 등록한 글(분석/결합/시각화)의 이력 리스트를 리턴한다 -->
	<select id="selectBdpUserArticleLogList" parameterType="hashmap" resultType="EntityMap">
		<![CDATA[
		SELECT * FROM BDP_USER_ARTICLE_LOG WHERE 1=1		
		]]>
		<if test="userId != null and !userId.equals('')">
		AND USER_ID = #{userId}
		</if>
		ORDER BY UAL_ID DESC
		LIMIT #{startNum}, #{endNum}
	</select>
	
	<!-- 파일 업로드 이력정보 리턴 -->
	<select id="selectUserUploadLogInfo" parameterType="hashmap" resultType="EntityMap">
		<![CDATA[
		SELECT * FROM BDP_USER_UPLOAD_LOG WHERE 1=1
		]]>
		AND UL_ID = #{ulId}
		<if test="userId != null and !userId.equals('')">
		AND USER_ID #{userId}
		</if>
	</select>
	
	<delete id="deleteUserArticleLog" parameterType="string">
		DELETE FROM BDP_USER_ARTICLE_LOG WHERE USER_ID = #{userId}
	</delete>

	<delete id="deleteUserUploadLog" parameterType="string">
		DELETE FROM BDP_USER_UPLOAD_LOG WHERE USER_ID = #{userId}
	</delete>	
	
</mapper>